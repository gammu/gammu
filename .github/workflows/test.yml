name: Tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        #, windows-latest, macos-latest]
        args: [""]
        include:
          - os: ubuntu-20.04
            args: -DENABLE_GETOPT=OFF
          - os: ubuntu-20.04
            args: -DUSE_WCHAR_T=OFF
        # TODO: Compiler gcc / clang
    env:
      CTEST_OUTPUT_ON_FAILURE: 1
      ARGS: ${{ matrix.args }}
      TESTARGS: -DMYSQL_TESTING=on -DPSQL_TESTING=ON
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: smsd
          POSTGRES_USER: smsd
          POSTGRES_DB: smsd
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      mysql:
        image: mysql
        env:
          MYSQL_DATABASE: smsd
          MYSQL_USER: smsd
          MYSQL_PASSWORD: smsd
          MYSQL_ROOT_PASSWORD: smsd
        options: >-
            --health-cmd="mysqladmin --password=smsd ping"
            --health-interval=10s
            --health-timeout=5s
            --health-retries=5
        ports:
          - 3306:3306
    steps:
      - uses: actions/checkout@v2.3.4
      - name: apt
        run: |
          sudo apt-get update
          sudo apt-get install -y libbluetooth-dev libusb-1.0-0-dev libgudev-1.0-dev unixodbc-dev libdbi-dev libdbd-sqlite3 libdbd-mysql libdbd-pgsql cmake cmake-data
      - name: Prepare
        run: |
          mkdir _build
          cd _build
          ln -s ../codecov.yml .
      - name: cmake
        run: |
          cd _build
          #  -DCMAKE_C_COMPILER=$CC
          cmake .. -DENABLE_COVERAGE=ON -DCMAKE_BUILD_TYPE=Continuous -DONLINE_TESTING=ON $TESTARGS $ARGS
      - name: build
        run: make -C _build
      - name: test
        run: make -C _build test
      - name: coverage
        run: make -C _build gcov
      - uses: codecov/codecov-action@v2.0.1
